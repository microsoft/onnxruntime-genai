parameters:
- name: arch
  type: string
- name: ep
  type: string
- name: ort_version
  type: string
- name: cuda_version
  type: string
  default: ''
- name: os
  type: string
  values:
  - 'linux'
  - 'win'
  - 'osx'
  - 'ios'
- name: build_config
  type: string
  default: 'release'

jobs:
- job: capi_${{ parameters.os }}_${{ parameters.ep }}_${{ parameters.arch }}_packaging
  ${{ if eq(parameters.os, 'linux') }}:
    ${{ if eq(parameters.arch, 'x64') }}:
      pool: 'onnxruntime-Ubuntu2204-AMD-CPU'
    ${{ elseif eq(parameters.arch, 'arm64') }}:
      pool: 'onnxruntime-genai-Ubuntu2004-ARM-CPU'
    ${{ else }}:
      pool: 'nnxruntime-Ubuntu2204-AMD-CPU'
  ${{ if eq(parameters.os, 'win') }}:
    ${{ if eq(parameters.arch, 'x64') }}:
      pool: 'onnxruntime-Win-CPU-2022'
    ${{ elseif eq(parameters.arch, 'arm64') }}:
      pool: 'onnxruntime-genai-windows-vs-2022-arm64'
    ${{ else }}:
      pool: 'onnxruntime-Win-CPU-2022'
  ${{ if or(eq(parameters.os, 'osx'), eq(parameters.os, 'ios')) }}:
    pool:
      vmImage: 'macOS-latest'

  timeoutInMinutes: 180
  #  set variables here to be used in the template and steps
  variables:
  - name: arch
    value: ${{ parameters.arch }}
  - name: artifactName
    value: 'onnxruntime-genai-${{ parameters.os }}-${{ parameters.ep }}-${{ parameters.arch }}'
  - name: build_config
    value: ${{ parameters.build_config }}
  - name: buildDir
    value: 'build/${{ parameters.ep }}'
  - name: cuda_version
    value: ${{ parameters.cuda_version }}
  - name: ep
    value: ${{ parameters.ep }}
  - name: ort_version
    value: ${{ parameters.ort_version }}
  - name: GDN_CODESIGN_TARGETDIRECTORY
    value: '$(Build.ArtifactStagingDirectory)/nuget'
  - name: os
    value: ${{ parameters.os }}
  - name: feed_name
    value: '7982ae20-ed19-4a35-a362-a96ac99897b7'

  workspace:
    clean: all
  steps:
  - script: |
      MKDIR $(Agent.ToolsDirectory)\Python\3.11.0\arm64
      XCOPY /s /y /h /e /c /q "C:\Python\Python311\*.*" $(Agent.ToolsDirectory)\Python\3.11.0\arm64\
      COPY NUL $(Agent.ToolsDirectory)\Python\3.11.0\arm64.complete
      DIR $(Agent.ToolsDirectory)\Python
      DIR $(Agent.ToolsDirectory)\Python\3.11.0
      DIR $(Agent.ToolsDirectory)\Python\3.11.0\arm64
      DIR "C:\Python"
    displayName: Copy python 3.11.0 version to agent tools directory
    condition: and(eq(variables['arch'], 'arm64'), eq(variables['os'], 'win'))

  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.11
      addToPath: true
      architecture: $(arch)

  - ${{ if eq(parameters.os, 'linux') }}:
    - template: steps/capi-linux-step.yml
      parameters:
        target: 'onnxruntime-genai'
        arch: ${{ parameters.arch }}
        ep: ${{ parameters.ep }}
        build_config: ${{ parameters.build_config }}

  - ${{ if eq(parameters.os, 'win') }}:
    - template: steps/capi-win-step.yml
      parameters:
        target: 'onnxruntime-genai'
        arch: ${{ parameters.arch }}
        ep: ${{ parameters.ep }}
        build_config: ${{ parameters.build_config }}

  - ${{ if eq(parameters.os, 'osx') }}:
    - template: steps/capi-macos-step.yml
      parameters:
        target: 'onnxruntime-genai'
        arch: ${{ parameters.arch }}
        ep: ${{ parameters.ep }}
        build_config: ${{ parameters.build_config }}

  - ${{ if eq(parameters.os, 'ios') }}:
    - template: steps/capi-appleframework-step.yml
      parameters:
        build_config: ${{ parameters.build_config }}

  - template: steps/compliant-and-cleanup-step.yml
