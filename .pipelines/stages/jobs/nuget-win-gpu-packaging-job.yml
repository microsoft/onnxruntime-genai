parameters:
  arch: 'x64'
  ort_version: '1.17.0'
jobs:
- job: Windows_GPU_Wheels
  pool: 'onnxruntime-Win-CPU-2022'
  #  pool: 'onnxruntime-Win2022-GPU-A10'
  variables:
    build_config: 'RelWithDebInfo'
    cuda_version: '11.8'
    cuda_dir: '$(Build.SourcesDirectory)\cuda_sdk'
    ort_version: '1.17.0'
    build_dir: win-x64
  timeoutInMinutes: 180
  workspace:
    clean: all
  steps:
  - template: steps/capi-win-build-step.yml
    parameters:
      arch: ${{ parameters.arch }}
      ort_version: ${{ parameters.ort_version }}
      build_gpu: true

  - bash:
      dotnet build Microsoft.ML.OnnxRuntimeGenAI.csproj -p:Configuration="$(build_config)" -p:NativeBuildOutputDir="$(build_dir)\$(build_config)"
    displayName: 'Build CSharp'
    workingDirectory: '$(Build.SourcesDirectory)\src\csharp'

  - powershell: |
      Get-ChildItem -Path $(Build.SourcesDirectory)\$(build_dir)\ -Recurse

  - powershell: |
      $VERSION = Get-Content $(Build.SourcesDirectory)\VERSION_INFO
      nuget.exe pack Microsoft.ML.OnnxRuntimeGenAI.nuspec `
        -Prop version=$VERSION `
        -Prop id="Microsoft.ML.OnnxRuntimeGenAI.Gpu"
      nuget.exe pack Microsoft.ML.OnnxRuntimeGenAI.Managed.nuspec `
        -Prop version=$VERSION
    displayName: 'Nuget Packaging'
    workingDirectory: '$(Build.SourcesDirectory)\nuget'

  - powershell: |
      Get-ChildItem -Path $(Build.SourcesDirectory) -Recurse
  - task: CopyFiles@2
    displayName: 'Copy Nuget to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\nuget'
      Contents: '*.nupkg'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ONNXRuntime Genai python wheel'
    inputs:
      ArtifactName: onnxruntime-genai-win-gpu

  - template: compliant-and-cleanup.yml

