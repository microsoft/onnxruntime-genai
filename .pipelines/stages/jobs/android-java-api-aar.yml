parameters:
- name: build_config
  type: string
  default: 'Release'

- name: ort_version
  type: string

- name: package_name
  type: string
  default: 'onnxruntime-genai-android'

jobs:
- job: Android_AAR_Packaging
  timeoutInMinutes: 30
  workspace:
    clean: all
  #pool: 'ubuntu-latest'
  pool: onnxruntime-Ubuntu2204-AMD-CPU


  steps:
  - checkout: self
    clean: true
    submodules: none

  - template: steps/utils/use-android-ndk.yml
  - template: steps/utils/set-genai-version.yml

  - task: CmdLine@2
    displayName: Build Android AAR Packages
    inputs:
      script: |
        set -e -x
        
        BUILD_DIR=$(Build.BinariesDirectory)
        BUILD_CONFIG=${{parameters.build_config}}
        GENAI_VERSION=$(genai_version)
        PACKAGE_NAME=${{parameters.package_name}}
        ARTIFACTS_DIR=$(Build.ArtifactStagingDirectory)

        python3 tools/ci_build/github/android/build_aar_package.py \
            --build_dir $BUILD_DIR \
            --config $BUILD_CONFIG \
            tools/ci_build/github/android/default_aar_build_settings.json

        # Copy the built artifacts to the artifacts staging directory
        BASE_PATH=$BUILD_DIR/aar_out/${BUILD_CONFIG}/com/microsoft/onnxruntime/${PACKAGE_NAME}/${GENAI_VERSION}
        cp ${BASE_PATH}/${PACKAGE_NAME}-${GENAI_VERSION}-javadoc.jar  $ARTIFACTS_DIR
        cp ${BASE_PATH}/${PACKAGE_NAME}-${GENAI_VERSION}-sources.jar  $ARTIFACTS_DIR
        cp ${BASE_PATH}/${PACKAGE_NAME}-${GENAI_VERSION}.aar          $ARTIFACTS_DIR
        cp ${BASE_PATH}/${PACKAGE_NAME}-${GENAI_VERSION}.pom          $ARTIFACTS_DIR
      workingDirectory: $(Build.SourcesDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: drop-android
