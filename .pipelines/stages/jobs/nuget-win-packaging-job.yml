parameters:
- name: arch
  type: string
- name: ep
  type: string
- name: ort_version
  type: string
- name: cuda_version
  type: string
jobs:
- job: Windows_Nuget_Packaging_${{ parameters.arch }}_${{ parameters.ep }}
  pool: 'onnxruntime-Win-CPU-2022'
  variables:
  - name: build_config
    value: 'Release'
  - name: artifactName
    value: onnxruntime-genai-nuget-win-${{ parameters.ep }}-${{ parameters.arch }}
  - name: build_dir
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: 'build/release/cpu_default'
    ${{ if eq(parameters.ep, 'gpu') }}:
      value: 'build/release/cuda_default'
  - name: id
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: Microsoft.ML.OnnxRuntimeGenAI
    ${{ if eq(parameters.ep, 'gpu') }}:
      value: Microsoft.ML.OnnxRuntimeGenAI.Gpu
  timeoutInMinutes: 180
  workspace:
    clean: all
  steps:
  - template: steps/capi-win-build-step.yml
    parameters:
      arch: ${{ parameters.arch }}
      ort_version: ${{ parameters.ort_version }}
      ep: ${{ parameters.ep }}
      cuda_version: ${{ parameters.cuda_version }}

  - powershell: |
      dotnet build Microsoft.ML.OnnxRuntimeGenAI.csproj -p:Configuration="$(build_config)" -p:NativeBuildOutputDir="$(build_dir)\$(build_config)"
    displayName: 'Build CSharp'
    workingDirectory: '$(Build.SourcesDirectory)\src\csharp'

  - template: steps/win-esrp-dll-step.yml
    parameters:
      FolderPath: '$(Build.SourcesDirectory)\src\csharp\bin\Release\'
      DisplayName: 'ESRP - Sign C# dlls'

  - powershell: |
      $VERSION = '0.1.0-rc1'
      nuget.exe pack Microsoft.ML.OnnxRuntimeGenAI.nuspec `
        -Prop version=$VERSION `
        -Prop id=$(id) `
        -Prop configuration=$(build_config) `
        -Prop buildPath=$(build_dir)
      nuget.exe pack Microsoft.ML.OnnxRuntimeGenAI.Managed.nuspec `
        -Prop version=$VERSION `
        -Prop configuration=$(build_config)
    displayName: 'Nuget Packaging'
    workingDirectory: '$(Build.SourcesDirectory)\nuget'

  - powershell: |
      Get-ChildItem -Path $(Build.SourcesDirectory) -Recurse
  - task: CopyFiles@2
    displayName: 'Copy Nuget to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\nuget'
      Contents: '*.nupkg'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ONNXRuntime Genai nuget'
    inputs:
      ArtifactName: $(artifactName)

  - template: steps/compliant-and-cleanup-step.yml

