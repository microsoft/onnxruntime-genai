parameters:
- name: arch
  type: string
  values:
    - 'x64'
    - 'arm64'
- name: ep
  type: string
  values:
  - 'cpu'
  - 'cuda'
- name: ort_version
  type: string
- name: cuda_version
  type: string
  default: ''
jobs:
- job: Windows_Nuget_Packaging_${{ parameters.ep }}_${{ parameters.arch }}
  pool: 'onnxruntime-Win-CPU-2022'
  timeoutInMinutes: 180
  variables:
  - name: buildConfig
    value: 'Release'
  - name: cuda_version
    value: ${{ parameters.cuda_version }}
  - name: ort_version
    value: ${{ parameters.ort_version }}
  - name: arch
    value: ${{ parameters.arch }}
  - name: ep
    value: ${{ parameters.ep }}
  - name: buildDir
    value: 'build\release\${{ parameters.ep }}_default'
  - name: artifactName
    value : 'onnxruntime-genai-capi-win-${{ parameters.ep }}-${{ parameters.arch }}'
  - name: ort_filename
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: 'onnxruntime-win-${{ parameters.arch }}-${{ parameters.ort_version }}'
    ${{ else}}:
      ${{if eq(parameters.cuda_version, '11.8') }}:
        value: 'onnxruntime-win-${{ parameters.arch }}-gpu-${{ parameters.ort_version }}'
      ${{ else }}:
        value: 'onnxruntime-win-${{ parameters.arch }}-cuda12-${{ parameters.ort_version }}'
  - name: genai_nuget_ext
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: ''
    ${{ if eq(parameters.ep, 'cuda') }}:
      value: '.Cuda'
  - name: ort_nuget_ext
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: ''
    ${{ if eq(parameters.ep, 'cuda') }}:
      value: '.Gpu'
  workspace:
    clean: all
  steps:
  - template: steps/capi-win-step.yml
    parameters:
      target: 'onnxruntime-genai'

  - template: steps/nuget-win-step.yml


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ONNXRuntime Genai capi'
    inputs:
      ArtifactName: $(artifactName)

  - template: steps/compliant-and-cleanup-step.yml

