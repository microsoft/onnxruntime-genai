parameters:
- name: arch
  type: string
- name: ort_version
  type: string
- name: ep
  type: string
- name: cuda_version
  type: string
  default: ''
- name: machine_pool
  type: string
  default: 'onnxruntime-Ubuntu2204-AMD-CPU'
- name: genai_src
  type: string
  default: '$(Build.SourcesDirectory)/onnxruntime-genai'
jobs:
- job: Linux_${{ parameters.ep }}_${{ parameters.arch }}_Wheels
  strategy:
    matrix:
      Python38:
        PyDotVer: '3.8'
        PyNoDotVer: '38'
      Python39:
        PyDotVer: '3.9'
        PyNoDotVer: '39'
      Python310:
        PyDotVer: '3.10'
        PyNoDotVer: '310'
      Python311:
        PyDotVer: '3.11'
        PyNoDotVer: '311'
      Python312:
        PyDotVer: '3.12'
        PyNoDotVer: '312'
  timeoutInMinutes: 240
  workspace:
    clean: all
  pool: ${{ parameters.machine_pool }}
  variables:
  # The build machine pool doesn't have dotnet, so it can't run CG.
  - name: skipComponentGovernanceDetection
    value: true
  - name: ort_filename
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: 'onnxruntime-linux-${{ parameters.arch }}-${{ parameters.ort_version }}'
    ${{ else}}:
      ${{if eq(parameters.cuda_version, '11.8') }}:
        value: 'onnxruntime-linux-${{ parameters.arch }}-gpu-${{ parameters.ort_version }}'
      ${{ else }}:
        value: 'onnxruntime-linux-${{ parameters.arch }}-cuda12-${{ parameters.ort_version }}'
  steps:

  - template: steps/py-linux-build-step.yml
    parameters:
      arch: ${{ parameters.arch }}
      ort_version: ${{ parameters.ort_version }}
      ep: ${{ parameters.ep }}
      ort_filename: $(ort_filename)
      PyDotVer: $(PyDotVer)
      PyNoDotVer: $(PyNoDotVer)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ONNXRuntime python wheel'
    inputs:
      ArtifactName: onnxruntime-genai-linux-${{ parameters.ep }}-${{ parameters.arch }}

  - template: steps/compliant-and-cleanup-step.yml

