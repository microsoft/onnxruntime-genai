parameters:
- name: arch
  type: string
  default: 'x64'
- name: ort_version
  type: string
  default: '1.17.1'
- name: cuda_version
  type: string
  default: '11.8'
- name: ep
  type: string
  default: 'cpu'
  values:
  - 'cpu'
  - 'cuda'
- name: machine_pool
  type: string
  default: 'onnxruntime-Ubuntu2204-AMD-CPU'
jobs:
- job: Linux_${{ parameters.ep }}_${{ parameters.arch }}_Wheels
  strategy:
    matrix:
      Python38:
        PythonExecutable: '/opt/python/cp38-cp38/bin/python3.8'
      Python39:
        PythonExecutable: '/opt/python/cp39-cp39/bin/python3.9'
      Python310:
        PythonExecutable: '/opt/python/cp310-cp310/bin/python3.10'
      Python311:
        PythonExecutable: '/opt/python/cp311-cp311/bin/python3.11'
      Python312:
        PythonExecutable: '/opt/python/cp312-cp312/bin/python3.12'
  timeoutInMinutes: 240
  workspace:
    clean: all
  pool: ${{ parameters.machine_pool }}
  variables:
  # The build machine pool doesn't have dotnet, so it can't run CG.
  - name: skipComponentGovernanceDetection
    value: true

  steps:
  - template: steps/linux-build-step.yml
    parameters:
      arch: ${{ parameters.arch }}
      ort_version: ${{ parameters.ort_version }}
      ep: ${{ parameters.ep }}
      cuda_version: ${{ parameters.cuda_version }}
      target: 'python'
      python_exe: $(PythonExecutable)

  - script: |
      ls $(Build.SourcesDirectory) -R

  - task: CopyFiles@2
    displayName: 'Copy Python Wheel to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/onnxruntime-genai/build/gcc_${{ parameters.ep }}/release/wheel'
      Contents: '*manylinux*.whl'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ONNXRuntime python wheel'
    inputs:
      ArtifactName: onnxruntime-genai-linux-${{ parameters.ep }}-${{ parameters.arch }}

  - template: steps/component-governance-component-detection-step.yml
    parameters:
      condition: 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()