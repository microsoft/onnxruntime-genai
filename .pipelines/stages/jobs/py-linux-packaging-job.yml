parameters:
- name: arch
  type: string
  default: 'x64'
- name: ort_version
  type: string
  default: '1.17.1'
- name: ep
  type: string
  default: 'cpu'
  values:
  - 'cpu'
  - 'cuda'
- name: machine_pool
  type: string
  default: 'onnxruntime-Ubuntu2204-AMD-CPU'
jobs:
- job: Linux_${{ parameters.ep }}_${{ parameters.arch }}_Wheels
  strategy:
    matrix:
      Python38:
        PythonVersion: '3.8'
      Python39:
        PythonVersion: '3.9'
      Python310:
        PythonVersion: '3.10'
      Python311:
        PythonVersion: '3.11'
      Python312:
        PythonVersion: '3.12'
  timeoutInMinutes: 240
  workspace:
    clean: all
  pool: ${{ parameters.machine_pool }}
  variables:
  # The build machine pool doesn't have dotnet, so it can't run CG.
  - name: skipComponentGovernanceDetection
    value: true
  - name: ort_filename
    ${{ if eq(parameters.ep, 'cpu') }}:
      value: 'onnxruntime-linux-${{ parameters.arch }}-${{ parameters.ort_version }}'
    ${{ else}}:
      ${{if eq(parameters.cuda_version, '11.8') }}:
        value: 'onnxruntime-linux-${{ parameters.arch }}-gpu-${{ parameters.ort_version }}'
      ${{ else }}:
        value: 'onnxruntime-linux-${{ parameters.arch }}-cuda12-${{ parameters.ort_version }}'
  steps:
  - template: steps/linux-build-step.yml
    parameters:
      arch: ${{ parameters.arch }}
      ort_version: ${{ parameters.ort_version }}
      ep: ${{ parameters.ep }}
      target: 'python'
      ort_filename: $(ort_filename)
      python_version: $(PythonVersion)

  - script: |
      ls $(Build.SourcesDirectory) -R

  - task: CopyFiles@2
    displayName: 'Copy Python Wheel to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/onnxruntime-genai/build/gcc_${{ parameters.ep }}/release/wheel'
      Contents: '*manylinux*.whl'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ONNXRuntime python wheel'
    inputs:
      ArtifactName: onnxruntime-genai-linux-${{ parameters.ep }}-${{ parameters.arch }}

  - template: steps/component-governance-component-detection-step.yml
    parameters:
      condition: 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()