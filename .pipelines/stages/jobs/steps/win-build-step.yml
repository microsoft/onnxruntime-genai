parameters:
  arch: 'x64'
  ort_version: '1.17.1'
  ep: 'cpu'
  cuda_version: '11.8'
  target: 'onnxruntime-genai'
steps:
- checkout: self
  clean: true
  submodules: recursive
- task: onebranch.pipeline.tsaoptions@1
  displayName: 'OneBranch TSAOptions'
  inputs:
    tsaConfigFilePath: '$(Build.SourcesDirectory)\.config\tsaoptions.json'
    appendSourceBranchName: false

- template: set-nightly-build-option-variable-step.yml

- task: DownloadGitHubRelease@0
  inputs:
    connection: 'GitHub - Release'
    userRepository: 'microsoft/onnxruntime'
    defaultVersionType: 'specificTag'
    version: 'v${{ parameters.ort_version }}'
    ${{ if eq(parameters.ep, 'cuda') }}:
      ${{ if eq(parameters.cuda_version, '11.8') }}:
        itemPattern: 'onnxruntime-win-${{ parameters.arch }}-gpu-${{ parameters.ort_version }}*'
      ${{ else }}:
        itemPattern: 'onnxruntime-win-${{ parameters.arch }}-cuda12-${{ parameters.ort_version }}*'
    ${{ else }}:
      itemPattern: 'onnxruntime-win-${{ parameters.arch }}-${{ parameters.ort_version }}*'
    downloadPath: '$(Build.SourcesDirectory)'
  displayName: Download ONNXRuntime ${{ parameters.arch }} ${{ parameters.ep }}

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '**/*.zip'
    destinationFolder: '$(Build.SourcesDirectory)'
    cleanDestinationFolder: false
    overwriteExistingFiles: true
  displayName: Unzip OnnxRuntime

- powershell: |
    Rename-Item -Path onnxruntime-win-${{ parameters.arch }}-${{ parameters.ort_version }} -NewName ort
  displayName: Rename Onnxruntime CPU to ort
  condition: eq('${{ parameters.ep }}', 'cpu')
  workingDirectory: '$(Build.SourcesDirectory)'

- powershell: |
    Rename-Item -Path onnxruntime-win-${{ parameters.arch }}-gpu-${{ parameters.ort_version }} -NewName ort
  displayName: Rename Onnxruntime CUDA 11 to ort
  condition: and(eq('${{ parameters.ep }}', 'cuda'), eq('${{ parameters.cuda_version }}', '11.8'))
  workingDirectory: '$(Build.SourcesDirectory)'

- powershell: |
    Rename-Item -Path onnxruntime-win-${{ parameters.arch }}-cuda12-${{ parameters.ort_version }} -NewName ort
  displayName: Rename Onnxruntime CUDA 12 to ort
  condition: and(eq('${{ parameters.ep }}', 'cuda'), eq('${{ parameters.cuda_version }}', '12.2'))
  workingDirectory: '$(Build.SourcesDirectory)'

- powershell: |
    azcopy.exe cp --recursive "https://lotusscus.blob.core.windows.net/models/cuda_sdk/v${{ parameters.cuda_version }}" '$(Build.SourcesDirectory)\cuda_sdk'
  displayName: 'Download CUDA'
  condition: eq('${{ parameters.ep }}', 'cuda')
  workingDirectory: '$(Build.SourcesDirectory)'

- powershell: |
    cmake --preset windows_${{ parameters.arch }}_${{ parameters.ep }}_release -T cuda='$(Build.SourcesDirectory)\cuda_sdk\v${{ parameters.cuda_version }}'
  displayName: 'Configure CMake C API with CUDA'
  condition: eq('${{ parameters.ep }}', 'cuda')
  workingDirectory: '$(Build.SourcesDirectory)'

- powershell: |
    cmake --preset windows_${{ parameters.arch }}_${{ parameters.ep }}_release
  displayName: 'Configure CMake C API without CUDA'
  condition: ne('${{ parameters.ep }}', 'cuda')
  workingDirectory: '$(Build.SourcesDirectory)'

- powershell: |
    cmake --build --preset windows_${{ parameters.arch }}_${{ parameters.ep }}_release --parallel --target ${{ parameters.target }}
  displayName: 'Build C API'
  workingDirectory: '$(Build.SourcesDirectory)'

- template: win-esrp-dll-step.yml
  parameters:
    FolderPath: '$(Build.SourcesDirectory)\build\release\${{ parameters.ep }}_default\Release'
    DisplayName: 'ESRP - Sign C++ dlls'

- task: BinSkim@4
  displayName: 'Run BinSkim'
  inputs:
    AnalyzeTargetGlob: '$(Build.SourcesDirectory)\**\*genai.dll'
  continueOnError: true